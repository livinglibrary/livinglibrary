package com.livinglibrary.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ForumcommentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public ForumcommentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCommentidIsNull() {
			addCriterion("commentid is null");
			return (Criteria) this;
		}

		public Criteria andCommentidIsNotNull() {
			addCriterion("commentid is not null");
			return (Criteria) this;
		}

		public Criteria andCommentidEqualTo(Integer value) {
			addCriterion("commentid =", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidNotEqualTo(Integer value) {
			addCriterion("commentid <>", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidGreaterThan(Integer value) {
			addCriterion("commentid >", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidGreaterThanOrEqualTo(Integer value) {
			addCriterion("commentid >=", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidLessThan(Integer value) {
			addCriterion("commentid <", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidLessThanOrEqualTo(Integer value) {
			addCriterion("commentid <=", value, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidIn(List<Integer> values) {
			addCriterion("commentid in", values, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidNotIn(List<Integer> values) {
			addCriterion("commentid not in", values, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidBetween(Integer value1, Integer value2) {
			addCriterion("commentid between", value1, value2, "commentid");
			return (Criteria) this;
		}

		public Criteria andCommentidNotBetween(Integer value1, Integer value2) {
			addCriterion("commentid not between", value1, value2, "commentid");
			return (Criteria) this;
		}

		public Criteria andPostidIsNull() {
			addCriterion("postid is null");
			return (Criteria) this;
		}

		public Criteria andPostidIsNotNull() {
			addCriterion("postid is not null");
			return (Criteria) this;
		}

		public Criteria andPostidEqualTo(Integer value) {
			addCriterion("postid =", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidNotEqualTo(Integer value) {
			addCriterion("postid <>", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidGreaterThan(Integer value) {
			addCriterion("postid >", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidGreaterThanOrEqualTo(Integer value) {
			addCriterion("postid >=", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidLessThan(Integer value) {
			addCriterion("postid <", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidLessThanOrEqualTo(Integer value) {
			addCriterion("postid <=", value, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidIn(List<Integer> values) {
			addCriterion("postid in", values, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidNotIn(List<Integer> values) {
			addCriterion("postid not in", values, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidBetween(Integer value1, Integer value2) {
			addCriterion("postid between", value1, value2, "postid");
			return (Criteria) this;
		}

		public Criteria andPostidNotBetween(Integer value1, Integer value2) {
			addCriterion("postid not between", value1, value2, "postid");
			return (Criteria) this;
		}

		public Criteria andParentidIsNull() {
			addCriterion("parentid is null");
			return (Criteria) this;
		}

		public Criteria andParentidIsNotNull() {
			addCriterion("parentid is not null");
			return (Criteria) this;
		}

		public Criteria andParentidEqualTo(Integer value) {
			addCriterion("parentid =", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotEqualTo(Integer value) {
			addCriterion("parentid <>", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidGreaterThan(Integer value) {
			addCriterion("parentid >", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidGreaterThanOrEqualTo(Integer value) {
			addCriterion("parentid >=", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidLessThan(Integer value) {
			addCriterion("parentid <", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidLessThanOrEqualTo(Integer value) {
			addCriterion("parentid <=", value, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidIn(List<Integer> values) {
			addCriterion("parentid in", values, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotIn(List<Integer> values) {
			addCriterion("parentid not in", values, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidBetween(Integer value1, Integer value2) {
			addCriterion("parentid between", value1, value2, "parentid");
			return (Criteria) this;
		}

		public Criteria andParentidNotBetween(Integer value1, Integer value2) {
			addCriterion("parentid not between", value1, value2, "parentid");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Date value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Date value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThan(Date value) {
			addCriterion("addtime >", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("addtime >=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThan(Date value) {
			addCriterion("addtime <", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Date value) {
			addCriterion("addtime <=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeIn(List<Date> values) {
			addCriterion("addtime in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotIn(List<Date> values) {
			addCriterion("addtime not in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Date value1, Date value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Date value1, Date value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("userid is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userid is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Integer value) {
			addCriterion("userid =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Integer value) {
			addCriterion("userid <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Integer value) {
			addCriterion("userid >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
			addCriterion("userid >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Integer value) {
			addCriterion("userid <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Integer value) {
			addCriterion("userid <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Integer> values) {
			addCriterion("userid in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Integer> values) {
			addCriterion("userid not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Integer value1, Integer value2) {
			addCriterion("userid between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Integer value1, Integer value2) {
			addCriterion("userid not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andIsanonymousIsNull() {
			addCriterion("isanonymous is null");
			return (Criteria) this;
		}

		public Criteria andIsanonymousIsNotNull() {
			addCriterion("isanonymous is not null");
			return (Criteria) this;
		}

		public Criteria andIsanonymousEqualTo(Boolean value) {
			addCriterion("isanonymous =", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousNotEqualTo(Boolean value) {
			addCriterion("isanonymous <>", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousGreaterThan(Boolean value) {
			addCriterion("isanonymous >", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousGreaterThanOrEqualTo(Boolean value) {
			addCriterion("isanonymous >=", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousLessThan(Boolean value) {
			addCriterion("isanonymous <", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousLessThanOrEqualTo(Boolean value) {
			addCriterion("isanonymous <=", value, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousIn(List<Boolean> values) {
			addCriterion("isanonymous in", values, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousNotIn(List<Boolean> values) {
			addCriterion("isanonymous not in", values, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousBetween(Boolean value1, Boolean value2) {
			addCriterion("isanonymous between", value1, value2, "isanonymous");
			return (Criteria) this;
		}

		public Criteria andIsanonymousNotBetween(Boolean value1, Boolean value2) {
			addCriterion("isanonymous not between", value1, value2, "isanonymous");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table forumcomment
	 * @mbg.generated  Thu May 03 08:06:12 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table forumcomment
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 24 08:07:21 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}